# coding: utf-8

"""
    Power BI Report Server REST API

    The Power BI Report Server REST API provides programmatic access to the report server catalog.  For example, basic CRUD operations can be done on folders, reports, KPIs, data sources, datasets, refresh plans, subscriptions, etc.     The REST API can also be used to provide more advanced functionality, such as: * Navigate the folder hierarchy * Discover the contents of a folder * Download a report definition * Modify default report parameters * Change or execute a refresh plan * A whole lot more  The REST API is a RESTful successor to the legacy [SOAP API](https://msdn.microsoft.com/library/reportservice2010.reportingservice2010.aspx).  Since Power BI Report Server is a superset of SQL Server Reporting Services, the Power BI Report Server REST API is a superset of the  [SQL Server Reporting Services REST API](https://app.swaggerhub.com/apis/microsoft-rs/SSRS/2.0).  __Power BI Report Server API Additions__ * October 2020 Release   * /PowerBIReports({Id})/DataModelParameters(GET & POST)  * January 2019 Release   * /PowerBIReports({Id})/DataModelRoles (GET)   * /PowerBIReports({Id})/DataModelRoleAssignments (GET & PUT)  Happy coding!  __API samples:__ https://github.com/Microsoft/Reporting-Services  __Developer documentation:__ https://powerbi.microsoft.com/documentation/reportserver-developer-handbook-overview/  __Team Blog:__  https://powerbi.microsoft.com/blog/  __Support forums:__  https://community.powerbi.com/t5/Report-Server/bd-p/ReportServer   # noqa: E501

    OpenAPI spec version: 2.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import unittest

import swagger_client
from swagger_client.api.excel_workbooks_api import ExcelWorkbooksApi  # noqa: E501
from swagger_client.rest import ApiException


class TestExcelWorkbooksApi(unittest.TestCase):
    """ExcelWorkbooksApi unit test stubs"""

    def setUp(self):
        self.api = swagger_client.api.excel_workbooks_api.ExcelWorkbooksApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_add_excel_workbook(self):
        """Test case for add_excel_workbook

        Creates a new ExcelWorkbook CatalogItem.  # noqa: E501
        """
        pass

    def test_add_excel_workbook_comment(self):
        """Test case for add_excel_workbook_comment

        Creates a new Comment associated to the specified ExcelWorkbook.  # noqa: E501
        """
        pass

    def test_delete_excel_workbook(self):
        """Test case for delete_excel_workbook

        Deletes the specified ExcelWorkbook.  # noqa: E501
        """
        pass

    def test_delete_excel_workbook_comment(self):
        """Test case for delete_excel_workbook_comment

        Deletes the specified Comment associated to the ExcelWorkbook.  # noqa: E501
        """
        pass

    def test_get_excel_workbook(self):
        """Test case for get_excel_workbook

        Gets the ExcelWorkbook CatalogItem specified by the Id.  # noqa: E501
        """
        pass

    def test_get_excel_workbook_allowed_actions(self):
        """Test case for get_excel_workbook_allowed_actions

        Gets a list of actions allowed in the current session, user permissions and product edition capabilities are considered when querying.  # noqa: E501
        """
        pass

    def test_get_excel_workbook_comments(self):
        """Test case for get_excel_workbook_comments

        Gets the Comments for a ExcelWorkbook specified by the Id.  # noqa: E501
        """
        pass

    def test_get_excel_workbook_content(self):
        """Test case for get_excel_workbook_content

        Gets the content of the specified ExcelWorkbook CatalogItem specified by the Id.  # noqa: E501
        """
        pass

    def test_get_excel_workbook_policies(self):
        """Test case for get_excel_workbook_policies

        Gets policies associated with the specified ExcelWorkbook CatalogItem.  # noqa: E501
        """
        pass

    def test_get_excel_workbook_properties(self):
        """Test case for get_excel_workbook_properties

        Gets ExcelWorkbook properties (takes list of property names to retrieve the values)  # noqa: E501
        """
        pass

    def test_get_excel_workbooks(self):
        """Test case for get_excel_workbooks

        Gets an array of ExcelWorkbook CatalogItems.  # noqa: E501
        """
        pass

    def test_set_excel_workbook_policies(self):
        """Test case for set_excel_workbook_policies

        Replaces ItemPolicies associated with the specified ExcelWorkbook item.  # noqa: E501
        """
        pass

    def test_update_excel_workbook(self):
        """Test case for update_excel_workbook

        Updates the specified ExcelWorkbook CatalogItem using the provided definition.  # noqa: E501
        """
        pass

    def test_update_excel_workbook_comment(self):
        """Test case for update_excel_workbook_comment

        Updates the Comment specified by CommentId in the associated ExcelWorkbook.  # noqa: E501
        """
        pass

    def test_update_excel_workbook_properties(self):
        """Test case for update_excel_workbook_properties

        Updates the ExcelWorkbook properties included in the given list.  # noqa: E501
        """
        pass

    def test_upload_excel_workbook(self):
        """Test case for upload_excel_workbook

        Creates a new ExcelWorkbook CatalogItem from a multipart/form-data request. Use of this API is recommended for files larger than 25 MB in size.  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
