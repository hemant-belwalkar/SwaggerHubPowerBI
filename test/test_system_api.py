# coding: utf-8

"""
    Power BI Report Server REST API

    The Power BI Report Server REST API provides programmatic access to the report server catalog.  For example, basic CRUD operations can be done on folders, reports, KPIs, data sources, datasets, refresh plans, subscriptions, etc.     The REST API can also be used to provide more advanced functionality, such as: * Navigate the folder hierarchy * Discover the contents of a folder * Download a report definition * Modify default report parameters * Change or execute a refresh plan * A whole lot more  The REST API is a RESTful successor to the legacy [SOAP API](https://msdn.microsoft.com/library/reportservice2010.reportingservice2010.aspx).  Since Power BI Report Server is a superset of SQL Server Reporting Services, the Power BI Report Server REST API is a superset of the  [SQL Server Reporting Services REST API](https://app.swaggerhub.com/apis/microsoft-rs/SSRS/2.0).  __Power BI Report Server API Additions__ * October 2020 Release   * /PowerBIReports({Id})/DataModelParameters(GET & POST)  * January 2019 Release   * /PowerBIReports({Id})/DataModelRoles (GET)   * /PowerBIReports({Id})/DataModelRoleAssignments (GET & PUT)  Happy coding!  __API samples:__ https://github.com/Microsoft/Reporting-Services  __Developer documentation:__ https://powerbi.microsoft.com/documentation/reportserver-developer-handbook-overview/  __Team Blog:__  https://powerbi.microsoft.com/blog/  __Support forums:__  https://community.powerbi.com/t5/Report-Server/bd-p/ReportServer   # noqa: E501

    OpenAPI spec version: 2.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import unittest

import swagger_client
from swagger_client.api.system_api import SystemApi  # noqa: E501
from swagger_client.rest import ApiException


class TestSystemApi(unittest.TestCase):
    """SystemApi unit test stubs"""

    def setUp(self):
        self.api = swagger_client.api.system_api.SystemApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_get_system_allowed_actions(self):
        """Test case for get_system_allowed_actions

        Gets a list of system level actions allowed in the current session; user permissions and product edition capabilities are considered when querying.  # noqa: E501
        """
        pass

    def test_get_system_info(self):
        """Test case for get_system_info

        Get SystemInformation  # noqa: E501
        """
        pass

    def test_get_system_policies(self):
        """Test case for get_system_policies

        Gets the System Policies.  # noqa: E501
        """
        pass

    def test_get_system_properties(self):
        """Test case for get_system_properties

        Gets the Systems Properties (takes list of Property names to retrieve the values)  # noqa: E501
        """
        pass

    def test_set_system_policies(self):
        """Test case for set_system_policies

        Updates the System's Policies.  # noqa: E501
        """
        pass

    def test_update_system_properties(self):
        """Test case for update_system_properties

        Updates the System Properties with the given property list.  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
