# coding: utf-8

"""
    Power BI Report Server REST API

    The Power BI Report Server REST API provides programmatic access to the report server catalog.  For example, basic CRUD operations can be done on folders, reports, KPIs, data sources, datasets, refresh plans, subscriptions, etc.     The REST API can also be used to provide more advanced functionality, such as: * Navigate the folder hierarchy * Discover the contents of a folder * Download a report definition * Modify default report parameters * Change or execute a refresh plan * A whole lot more  The REST API is a RESTful successor to the legacy [SOAP API](https://msdn.microsoft.com/library/reportservice2010.reportingservice2010.aspx).  Since Power BI Report Server is a superset of SQL Server Reporting Services, the Power BI Report Server REST API is a superset of the  [SQL Server Reporting Services REST API](https://app.swaggerhub.com/apis/microsoft-rs/SSRS/2.0).  __Power BI Report Server API Additions__ * October 2020 Release   * /PowerBIReports({Id})/DataModelParameters(GET & POST)  * January 2019 Release   * /PowerBIReports({Id})/DataModelRoles (GET)   * /PowerBIReports({Id})/DataModelRoleAssignments (GET & PUT)  Happy coding!  __API samples:__ https://github.com/Microsoft/Reporting-Services  __Developer documentation:__ https://powerbi.microsoft.com/documentation/reportserver-developer-handbook-overview/  __Team Blog:__  https://powerbi.microsoft.com/blog/  __Support forums:__  https://community.powerbi.com/t5/Report-Server/bd-p/ReportServer   # noqa: E501

    OpenAPI spec version: 2.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import unittest

import swagger_client
from swagger_client.api.resources_api import ResourcesApi  # noqa: E501
from swagger_client.rest import ApiException


class TestResourcesApi(unittest.TestCase):
    """ResourcesApi unit test stubs"""

    def setUp(self):
        self.api = swagger_client.api.resources_api.ResourcesApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_add_resource(self):
        """Test case for add_resource

        Creates new Resource item  # noqa: E501
        """
        pass

    def test_delete_resource(self):
        """Test case for delete_resource

        Delete the specified Resource catalog item.  # noqa: E501
        """
        pass

    def test_get_resource(self):
        """Test case for get_resource

        Get the specified Resource.  # noqa: E501
        """
        pass

    def test_get_resource_allowed_actions(self):
        """Test case for get_resource_allowed_actions

        Gets a list of actions allowed in the current session; considering user permissions and product edition capabilities.  # noqa: E501
        """
        pass

    def test_get_resource_content(self):
        """Test case for get_resource_content

        Gets the content of the specified Resource CatalogItem specified by the Id.  # noqa: E501
        """
        pass

    def test_get_resource_policies(self):
        """Test case for get_resource_policies

        Gets ItemPolicies on the Resource item.  # noqa: E501
        """
        pass

    def test_get_resource_properties(self):
        """Test case for get_resource_properties

        Gets the specified Resources Properties (takes list of Property names to retrieve the values)  # noqa: E501
        """
        pass

    def test_get_resources(self):
        """Test case for get_resources

        Gets an array of Resource catalog items  # noqa: E501
        """
        pass

    def test_set_resource_policies(self):
        """Test case for set_resource_policies

        Replaces ItemPolicies on the Resource item.  # noqa: E501
        """
        pass

    def test_update_resource(self):
        """Test case for update_resource

        Updates the specified Resource catalog item.  # noqa: E501
        """
        pass

    def test_update_resource_properties(self):
        """Test case for update_resource_properties

        Updates the Resource Properties included in the given list.  # noqa: E501
        """
        pass

    def test_upload_resource(self):
        """Test case for upload_resource

        Does an efficient binary upload of a new or existing Resource CatalogItem from a multipart/form-data request. Use of this API is recommended for files larger than 25 MB in size.  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
