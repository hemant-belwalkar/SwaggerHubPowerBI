# coding: utf-8

"""
    Power BI Report Server REST API

    The Power BI Report Server REST API provides programmatic access to the report server catalog.  For example, basic CRUD operations can be done on folders, reports, KPIs, data sources, datasets, refresh plans, subscriptions, etc.     The REST API can also be used to provide more advanced functionality, such as: * Navigate the folder hierarchy * Discover the contents of a folder * Download a report definition * Modify default report parameters * Change or execute a refresh plan * A whole lot more  The REST API is a RESTful successor to the legacy [SOAP API](https://msdn.microsoft.com/library/reportservice2010.reportingservice2010.aspx).  Since Power BI Report Server is a superset of SQL Server Reporting Services, the Power BI Report Server REST API is a superset of the  [SQL Server Reporting Services REST API](https://app.swaggerhub.com/apis/microsoft-rs/SSRS/2.0).  __Power BI Report Server API Additions__ * October 2020 Release   * /PowerBIReports({Id})/DataModelParameters(GET & POST)  * January 2019 Release   * /PowerBIReports({Id})/DataModelRoles (GET)   * /PowerBIReports({Id})/DataModelRoleAssignments (GET & PUT)  Happy coding!  __API samples:__ https://github.com/Microsoft/Reporting-Services  __Developer documentation:__ https://powerbi.microsoft.com/documentation/reportserver-developer-handbook-overview/  __Team Blog:__  https://powerbi.microsoft.com/blog/  __Support forums:__  https://community.powerbi.com/t5/Report-Server/bd-p/ReportServer   # noqa: E501

    OpenAPI spec version: 2.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import unittest

import swagger_client
from swagger_client.api.linked_reports_api import LinkedReportsApi  # noqa: E501
from swagger_client.rest import ApiException


class TestLinkedReportsApi(unittest.TestCase):
    """LinkedReportsApi unit test stubs"""

    def setUp(self):
        self.api = swagger_client.api.linked_reports_api.LinkedReportsApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_add_linked_report(self):
        """Test case for add_linked_report

        Creates a new LinkedReport CatalogItem.  # noqa: E501
        """
        pass

    def test_add_linked_report_comment(self):
        """Test case for add_linked_report_comment

        Creates a new Comment associated to the specified LinkedReport.  # noqa: E501
        """
        pass

    def test_add_linked_report_history_snapshot(self):
        """Test case for add_linked_report_history_snapshot

        Creates new HistorySnapshot  # noqa: E501
        """
        pass

    def test_delete_linked_report(self):
        """Test case for delete_linked_report

        Deletes the specified LinkedReport.  # noqa: E501
        """
        pass

    def test_delete_linked_report_comment(self):
        """Test case for delete_linked_report_comment

        Deletes the specified Comment associated to the LinkedReport.  # noqa: E501
        """
        pass

    def test_delete_linked_report_history_snapshot(self):
        """Test case for delete_linked_report_history_snapshot

        Deletes a HistorySnapshot specified by HistoryId from the LinkedReport specified by Id.  # noqa: E501
        """
        pass

    def test_get_linked_report(self):
        """Test case for get_linked_report

        Gets a LinkedReport CatalogItem specified by the Id.  # noqa: E501
        """
        pass

    def test_get_linked_report_allowed_actions(self):
        """Test case for get_linked_report_allowed_actions

        Gets a list of actions allowed in the current session; user permissions and product edition capabilities are considered when querying.  # noqa: E501
        """
        pass

    def test_get_linked_report_cache_options(self):
        """Test case for get_linked_report_cache_options

        Gets the content of CacheOptions for the LinkedReport specified by the Id.  # noqa: E501
        """
        pass

    def test_get_linked_report_cache_refresh_plans(self):
        """Test case for get_linked_report_cache_refresh_plans

        Gets the CacheRefreshPlans for a LinkedReport specified by the Id.  # noqa: E501
        """
        pass

    def test_get_linked_report_comments(self):
        """Test case for get_linked_report_comments

        Gets the Comments for a LinkedReport specified by the Id.  # noqa: E501
        """
        pass

    def test_get_linked_report_history_snapshot(self):
        """Test case for get_linked_report_history_snapshot

        Gets requested HistorySnapshot item specified by HistoryId of the LinkedReport specified by Id.  # noqa: E501
        """
        pass

    def test_get_linked_report_history_snapshot_options(self):
        """Test case for get_linked_report_history_snapshot_options

        Gets HistorySnapshotOptions for the specified LinkedReport.  # noqa: E501
        """
        pass

    def test_get_linked_report_history_snapshots(self):
        """Test case for get_linked_report_history_snapshots

        Get a list of HistorySnapshots of the LinkedReport specified by Id.  # noqa: E501
        """
        pass

    def test_get_linked_report_parameter_definitions(self):
        """Test case for get_linked_report_parameter_definitions

        Gets the ParameterDefinitions associated with the LinkedReport specified by the Id.  # noqa: E501
        """
        pass

    def test_get_linked_report_policies(self):
        """Test case for get_linked_report_policies

        Gets ItemPolicies associated with the specified LinkedReport CatalogItem.  # noqa: E501
        """
        pass

    def test_get_linked_report_properties(self):
        """Test case for get_linked_report_properties

        Gets LinkedReport Properties (takes list of Property names to retrieve the values)  # noqa: E501
        """
        pass

    def test_get_linked_reports(self):
        """Test case for get_linked_reports

        Gets an array of LinkedReport CatalogItems.  # noqa: E501
        """
        pass

    def test_set_linked_report_cache_options(self):
        """Test case for set_linked_report_cache_options

        Replaces the CacheOption's content for a given LinkedReport using the provided definition.  # noqa: E501
        """
        pass

    def test_set_linked_report_history_snapshot_options(self):
        """Test case for set_linked_report_history_snapshot_options

        Updates HistorySnapshotOptions property.  # noqa: E501
        """
        pass

    def test_set_linked_report_policies(self):
        """Test case for set_linked_report_policies

        Replaces ItemPolicies associated with the specified LinkedReport item.  # noqa: E501
        """
        pass

    def test_update_linked_report(self):
        """Test case for update_linked_report

        Updates the specified LinkedReport CatalogItem using the provided definition.  # noqa: E501
        """
        pass

    def test_update_linked_report_comment(self):
        """Test case for update_linked_report_comment

        Updates the Comment specified by CommentId in the associated LinkedReport.  # noqa: E501
        """
        pass

    def test_update_linked_report_parameter_definitions(self):
        """Test case for update_linked_report_parameter_definitions

        Updates the ParameterDefinitions associated with the specified LinkedReport by the Id.  # noqa: E501
        """
        pass

    def test_update_linked_report_properties(self):
        """Test case for update_linked_report_properties

        Updates the LinkedReport Properties included in the given list.  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
