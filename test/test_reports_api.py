# coding: utf-8

"""
    Power BI Report Server REST API

    The Power BI Report Server REST API provides programmatic access to the report server catalog.  For example, basic CRUD operations can be done on folders, reports, KPIs, data sources, datasets, refresh plans, subscriptions, etc.     The REST API can also be used to provide more advanced functionality, such as: * Navigate the folder hierarchy * Discover the contents of a folder * Download a report definition * Modify default report parameters * Change or execute a refresh plan * A whole lot more  The REST API is a RESTful successor to the legacy [SOAP API](https://msdn.microsoft.com/library/reportservice2010.reportingservice2010.aspx).  Since Power BI Report Server is a superset of SQL Server Reporting Services, the Power BI Report Server REST API is a superset of the  [SQL Server Reporting Services REST API](https://app.swaggerhub.com/apis/microsoft-rs/SSRS/2.0).  __Power BI Report Server API Additions__ * October 2020 Release   * /PowerBIReports({Id})/DataModelParameters(GET & POST)  * January 2019 Release   * /PowerBIReports({Id})/DataModelRoles (GET)   * /PowerBIReports({Id})/DataModelRoleAssignments (GET & PUT)  Happy coding!  __API samples:__ https://github.com/Microsoft/Reporting-Services  __Developer documentation:__ https://powerbi.microsoft.com/documentation/reportserver-developer-handbook-overview/  __Team Blog:__  https://powerbi.microsoft.com/blog/  __Support forums:__  https://community.powerbi.com/t5/Report-Server/bd-p/ReportServer   # noqa: E501

    OpenAPI spec version: 2.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import unittest

import swagger_client
from swagger_client.api.reports_api import ReportsApi  # noqa: E501
from swagger_client.rest import ApiException


class TestReportsApi(unittest.TestCase):
    """ReportsApi unit test stubs"""

    def setUp(self):
        self.api = swagger_client.api.reports_api.ReportsApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_add_report(self):
        """Test case for add_report

        Creates a new Report CatalogItem.  # noqa: E501
        """
        pass

    def test_add_report_comment(self):
        """Test case for add_report_comment

        Creates a new Comment associated to the specified Report.  # noqa: E501
        """
        pass

    def test_add_report_history_snapshot(self):
        """Test case for add_report_history_snapshot

        Creates new HistorySnapshot  # noqa: E501
        """
        pass

    def test_check_report_data_source_connection(self):
        """Test case for check_report_data_source_connection

        Checks the status of the specified Reports DataSource connection.  # noqa: E501
        """
        pass

    def test_delete_report(self):
        """Test case for delete_report

        Deletes the specified Report.  # noqa: E501
        """
        pass

    def test_delete_report_comment(self):
        """Test case for delete_report_comment

        Deletes the specified Comment associated to the Report.  # noqa: E501
        """
        pass

    def test_delete_report_history_snapshot(self):
        """Test case for delete_report_history_snapshot

        Deletes the requested Reports HistorySnapshot specified by HistoryId.  # noqa: E501
        """
        pass

    def test_get_report(self):
        """Test case for get_report

        Gets a Report CatalogItem specified by the Id.  # noqa: E501
        """
        pass

    def test_get_report_allowed_actions(self):
        """Test case for get_report_allowed_actions

        Gets a list of actions allowed in the current session; user permissions and product edition capabilities are considered when querying.  # noqa: E501
        """
        pass

    def test_get_report_cache_options(self):
        """Test case for get_report_cache_options

        Gets the content of CacheOptions for the Report specified by the Id  # noqa: E501
        """
        pass

    def test_get_report_cache_refresh_plans(self):
        """Test case for get_report_cache_refresh_plans

        Gets the CacheRefreshPlans for the Report specified by the Id  # noqa: E501
        """
        pass

    def test_get_report_comments(self):
        """Test case for get_report_comments

        Gets the Comments for a Report specified by the Id.  # noqa: E501
        """
        pass

    def test_get_report_content(self):
        """Test case for get_report_content

        Gets the content of the specified Report CatalogItem specified by the Id.  # noqa: E501
        """
        pass

    def test_get_report_data_sources(self):
        """Test case for get_report_data_sources

        Gets the DataSources associated with the Report specified by the Id.  # noqa: E501
        """
        pass

    def test_get_report_dependent_items(self):
        """Test case for get_report_dependent_items

        Returns a list of CatalogItems that reference the Report specified by the Id.  # noqa: E501
        """
        pass

    def test_get_report_history_snapshot(self):
        """Test case for get_report_history_snapshot

        Gets the requested Reports HistorySnapshot specified by HistoryId.  # noqa: E501
        """
        pass

    def test_get_report_history_snapshot_options(self):
        """Test case for get_report_history_snapshot_options

        Gets the HistorySnapshotOptions for the specified Report.  # noqa: E501
        """
        pass

    def test_get_report_history_snapshots(self):
        """Test case for get_report_history_snapshots

        Get a list of HistorySnapshots for the specified Report.  # noqa: E501
        """
        pass

    def test_get_report_parameter_definitions(self):
        """Test case for get_report_parameter_definitions

        Gets the ParameterDefinitions associated with the Report specified by the Id.  # noqa: E501
        """
        pass

    def test_get_report_policies(self):
        """Test case for get_report_policies

        Gets policies associated with the specified Report CatalogItem.  # noqa: E501
        """
        pass

    def test_get_report_properties(self):
        """Test case for get_report_properties

        Gets the specified Reports Properties (takes list of Property names to retrieve the values)  # noqa: E501
        """
        pass

    def test_get_report_shared_data_sets(self):
        """Test case for get_report_shared_data_sets

        Gets the shared DataSets for the specified Report.  # noqa: E501
        """
        pass

    def test_get_report_subscriptions(self):
        """Test case for get_report_subscriptions

        Gets the Subscriptions for the specified Report.  # noqa: E501
        """
        pass

    def test_get_reports(self):
        """Test case for get_reports

        Gets an array of Report CatalogItems.  # noqa: E501
        """
        pass

    def test_set_report_cache_options(self):
        """Test case for set_report_cache_options

        Replaces the CacheOptions content for a given Report using the provided definition.  # noqa: E501
        """
        pass

    def test_set_report_data_source(self):
        """Test case for set_report_data_source

        Updates the DataSource definition associated with the Report specified by the Id.  # noqa: E501
        """
        pass

    def test_set_report_history_snapshot_options(self):
        """Test case for set_report_history_snapshot_options

        Updates HistorySnapshotOptions for the specified Report.  # noqa: E501
        """
        pass

    def test_set_report_policies(self):
        """Test case for set_report_policies

        Replaces ItemPolicies associated with the Report specified by the Id.  # noqa: E501
        """
        pass

    def test_set_report_shared_data_sets(self):
        """Test case for set_report_shared_data_sets

        Updates the DataSet definitions associated with the specified Report.  # noqa: E501
        """
        pass

    def test_update_cache_snapshot(self):
        """Test case for update_cache_snapshot

        Updates the execution cache snapshot for the specified report.  # noqa: E501
        """
        pass

    def test_update_report(self):
        """Test case for update_report

        Updates the specified Report CatalogItem using the provided definition.  # noqa: E501
        """
        pass

    def test_update_report_comment(self):
        """Test case for update_report_comment

        Updates the Comment specified by CommentId in the associated Report.  # noqa: E501
        """
        pass

    def test_update_report_data_sets(self):
        """Test case for update_report_data_sets

        Updates report to use the specificed shared datasets.  # noqa: E501
        """
        pass

    def test_update_report_parameter_definitions(self):
        """Test case for update_report_parameter_definitions

        Updates the ParameterDefinitions associated with the Report specified by Id.  # noqa: E501
        """
        pass

    def test_update_report_properties(self):
        """Test case for update_report_properties

        Updates the Report Properties included in the given list.  # noqa: E501
        """
        pass

    def test_upload_report(self):
        """Test case for upload_report

        Does an efficient binary upload of a new or existing Report CatalogItem from a multipart/form-data request. Use of this API is recommended for files larger than 25 MB in size.  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
